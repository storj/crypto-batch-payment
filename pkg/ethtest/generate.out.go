// This file is autogenerated. DO NOT MODIFY BY HAND
// To regenerate, run "go generate"

package ethtest

import (
	"crypto/ecdsa"
	"sync"

	"github.com/ethereum/go-ethereum/crypto"
)

var (
	keysMu  sync.Mutex
	keysIdx int
	keys    = []*ecdsa.PrivateKey{
		mustHexToECDSA("27fb6663b8a77117a346619edbf785487e03d811ce0a693f06dbce7a9cd5b353"),
		mustHexToECDSA("a96be801956cdaaaab27b5d7cf6ecbf27dbbb0a2150d892d9139f7be269f4d1d"),
		mustHexToECDSA("2a3ace7121a832ea728c933b1d3c4e23850b4edf6129c21a5f9bb4a4f4f1d2e3"),
		mustHexToECDSA("98dd518ce6359e6c263f1fb919e1a6e20b1f80cd7ef194fd50b934ba67272068"),
		mustHexToECDSA("e51945ebfec1ed08fc41db1bf5682a8ffd78b56fe1b7347c8daf7d255d4c8cff"),
		mustHexToECDSA("63263aadabd55a930ef624db75a26100c12d7ad6cd064f42efc3d1704b77f4bd"),
		mustHexToECDSA("650a6452b6a568d24fb484d5de5184ef600b697877cc5265b0bbdfb9b794f097"),
		mustHexToECDSA("13aea2d30bf9aebc40972b415b6ca5566c662be30f3021288644710a6a6dc1dc"),
		mustHexToECDSA("2b6f6b2884e919d5f48e479d1913c528c12c2d2a59d6c55e3708070ee2709bea"),
		mustHexToECDSA("b448d84ad76ce0ecd7765a8b808d0c87c5cd61fb5cd0e819245c881025cebe13"),
		mustHexToECDSA("2f4eb9ad45e1b3733f8267c805feb807ae339677bf6f59d79348ec2b76dfc767"),
		mustHexToECDSA("6f072053a37501df45f09225154830088efc6df5a4044d0e44243611f1487a29"),
		mustHexToECDSA("0460c30727637bc9bfd46b200c01f71ef69e7bb59b070b8024e8f003e0ce1206"),
		mustHexToECDSA("9858ba368f53240bffb8e1814f5a048d7a676765aa9a445c53f8eac135245680"),
		mustHexToECDSA("751d33e2aeba7c1ba4af586bf6c157f2be1d6142fb400b43d7ded64b94304727"),
		mustHexToECDSA("0e0bbbde6ab4877745b66c31c17dd5d0ebb951febb4e39169e9a9d86dcf035ee"),
		mustHexToECDSA("650eceefe27abacf771cfd276779c6e5f1e46453bb660d8d4c8c0a79e9060bdb"),
		mustHexToECDSA("26032364e3153a4c801460bbcdf97b22d2b1c956570080b8a3b024ca0d98a057"),
		mustHexToECDSA("6d2c917d782ab6af6b69caf5e805d3f1578e8fb6966f26d9038330573638fae8"),
		mustHexToECDSA("b0430a2562b43a79db25703573744a011eb55770fe00de3b66ee6061848ae94b"),
		mustHexToECDSA("fced6715c0d3634b745ac641543308e2e37b7d419509b3bf070d33f11f30714f"),
		mustHexToECDSA("7f0f1e6692fb55ab06636951daae62575b83322154e5dd2c90ab7f992daacc06"),
		mustHexToECDSA("d49520085b4a4ef3adc8266424e8750fcb65fc907a481ac02e838ed530cc6498"),
		mustHexToECDSA("63be1fbf760645846980edfff960ab80205efc1a6fedaeaf75c9576833373a1e"),
		mustHexToECDSA("dd058b6a87e3bd0b1df210a8dc990c3da66a685c8589b73b873a7dc6179a1448"),
		mustHexToECDSA("44887787d5050dc7c1ae8f41b9d34d118e1e3ee38ec4e3d3c41b261770b8a508"),
		mustHexToECDSA("5aa97597403964f012c952d48883b20a5a5b22bdceefed72d7c80b28cb5fb965"),
		mustHexToECDSA("2409ca1c1ff6efdc095fdb7208b74dc88e51a6bd4f505e62c8169df0a93adc87"),
		mustHexToECDSA("4ea5f1166c612ffa8d3f9d8ef3a7ebb14f4542bf0444c8f0cb6354c94301ec67"),
		mustHexToECDSA("a44ca207eb00f509f1d65d6ce3d676cfa75838bbf1ac3dd5e8c2ddfefa084f60"),
		mustHexToECDSA("5dafdbac50f54f02de14c63ef2f7b88a2d2c29ebf5b51b5647fd61ceef68a202"),
		mustHexToECDSA("3af0893048816f7ede283829455faa913badd1303152d9567650242e41398b24"),
		mustHexToECDSA("f67b3b16c872a4ac7c1e1dc8bed896f3cc5d082a14a98faeb3fe137d03320f5f"),
		mustHexToECDSA("c80f6d8d9aeb4a7b16540ccaea5d1b6d3664b485d2d40458f67da670dcd97dab"),
		mustHexToECDSA("a5be8e2b3b6fffcdcad4288439e00613d657eee11b0dcae8bd1a27ab4370aa87"),
		mustHexToECDSA("977434fc4c0795aa1bb37e6244b7a2ad39ece399d44b10ca1d5243fcbb12761c"),
		mustHexToECDSA("b8eb7df39cb9c6621ae162c6a865d26b0d45f44d3674942ee29f202416c60e53"),
		mustHexToECDSA("3d17ab9879456f8172be92fa13a69b4f64653b85610d849383086935792cd232"),
		mustHexToECDSA("88ccfe3a34569a1851a30f4209b1d9f6ab7e64c07a8c4a3f8d41a42043fa0fe3"),
		mustHexToECDSA("51ce756eb9aaa315dafcc8493d482f65585a8665fc811c7753c9c49b9eaacfe5"),
		mustHexToECDSA("9ed0ca69059fbcd72b3026810ca873c44cc0157231bb88a44073dcf5121a79cb"),
		mustHexToECDSA("df3eee58a708bce7770daa553a4cbd4e53711d39d98407fa7343bf34747d294e"),
		mustHexToECDSA("13343f52c93f24d4b50604600822ce08afa46ce8e2b3366eba6002a7f6514b76"),
		mustHexToECDSA("9423511b9ca2c2fb58bdaec04490236c514cf343c198602c178128921807f195"),
		mustHexToECDSA("a00798bc7afa46fe8b99f74b832ab36aa814825f8080e8e33e511dfc5d8aeb5b"),
		mustHexToECDSA("96608e7d9542d86666b2ebc7b141e0254c31640bf7e8326828812c6c71ff3595"),
		mustHexToECDSA("e6e77d0c28074e1f80c87411fa9cd89064f68c0eb151ae1c5976056575ecc421"),
		mustHexToECDSA("08d7142a00b4df50b112af83b70fa1383236f5f8f4d89f5f4c5ff13c0e289988"),
		mustHexToECDSA("8e074309c366db6812c5f1d26946292a11f0e1049f335f46c9aa70f8be302c3b"),
		mustHexToECDSA("dbb67e377b60287f393eccb1eb7891ecc09cac9930c9b40cb4146669de412aff"),
		mustHexToECDSA("38c09025e28548b3c1ac7ec9b60daa24b033e8a1bbff821b54179b9924fd269c"),
		mustHexToECDSA("a7d742206a4dbd9e5f555f6992bb6efee3e93c30f7e9627444deb0a7dd7b61ea"),
		mustHexToECDSA("8dbecd46a90fa2fa98d4d169f98f8028b9eb554502f07c7160a90b6a20572a35"),
		mustHexToECDSA("5d19eb9e3930531b0375e81e41137fb6f35e94154b3fecc4bf68014c920b9b35"),
		mustHexToECDSA("2e884a550e9b59abd36f0ca0d250e2dab11fe535a353fce95022d8a18395549c"),
		mustHexToECDSA("181e72cad38b4a0cd5fc382926a191a0c9ea7c9550c6052131ed7fce1c78a2de"),
		mustHexToECDSA("bbf9055874505a130e9196dec17c16373bee3f416079c48d2b81742491fcd86d"),
		mustHexToECDSA("9c5c157c4f531a4cb6cd2ee0fd6d3b41720d8f21a20be5ee9e0a0b755e0770b8"),
		mustHexToECDSA("6f345282685ba0307d4f9785c77e89fca9066c1d4caa34b531423781771d6502"),
		mustHexToECDSA("f7707dcfbe865493618049eaa7f2d4befea1e6fa509665cf61bdb53e89e5e6a2"),
		mustHexToECDSA("ed34caa9e87d82c7bbe0796b555921eb5fca353563619162124288277d7f5528"),
		mustHexToECDSA("29bc22b5f0ff121292d5ca95ecba2015bd215c8000428b279400124f2a6d81eb"),
		mustHexToECDSA("f3348cf33881478eb79d06a159ed4ef00789f578e1dfec6da44aaca4fc9c6c12"),
		mustHexToECDSA("035928c94807d718f31338a1da2e56ca4bee2c94ebc349c4e43d07a66038d89d"),
		mustHexToECDSA("61cbc9ed38d3298e47dce682ebef27603d0afee837d1941169785ed9713bc958"),
		mustHexToECDSA("69664c5c9890ee83cb8b2a03f21fd1df896e1a53f99eceb133340984dc23775b"),
		mustHexToECDSA("4aa1901f51b8ce9ae7543c431d676da88b36cff9cbfa35c4b0454c73a5b414eb"),
		mustHexToECDSA("5446bb3e4f8d74177a4e5862539b1e5fa3cf60b86a3bb6ab689deb2bd0f2a67c"),
		mustHexToECDSA("44467fd4aa589e6825ef447393fa59f0279f9d58d33f42ca7f5ef2c8ff88c28c"),
		mustHexToECDSA("d9dcfec78fc639f1eeb602b3160278ccba8b4420febae9c85092b16e668382f4"),
		mustHexToECDSA("dcbb46839a3af152b02065e0c48978d7d1c3cd20750bd32b0a19a00b1f178043"),
		mustHexToECDSA("6f86196664c3a0dfe6ebe83fcb0c97ec10cae27655dd8719b50a70dcc9118f96"),
		mustHexToECDSA("a833be9e7f1a13ee61a5644ad0aa830cafa4eab95efb7a7cad5bf812f020455f"),
		mustHexToECDSA("33cce8f4527a0b208644b4090558e2c74628dc06f95f9cab0a1b4ff03fdc12ca"),
		mustHexToECDSA("3c08998137cbb152b4b3bc2e56db5856f3db7281173853c922eb0e7a32ab77cc"),
		mustHexToECDSA("c9d8f72d18ed8ae973926e6d7b90d11d323fb49a898c15ffedf4ce3d315fde6a"),
		mustHexToECDSA("a45fdf0816c542424d1dc121a35f58771cba35a25f4f77070c5f75574866884b"),
		mustHexToECDSA("70d9c9bef2330f4415a4e1eed2d939b8ecc6bfa09aba338f23003da9a182fdfa"),
		mustHexToECDSA("aa828f748b3a3110efdec13a3d322c71d2dd9690d1e5610c6389e1c6ef57b6b6"),
		mustHexToECDSA("b5a3bc9656cb07335627f3bc61f41b5ed2bd725dcf9bc39294c99a4aa6fead98"),
		mustHexToECDSA("0831cde682f49e0dbaeee9564c93ae1761b5cf21cb7b7c73eb6b15df7b72861e"),
		mustHexToECDSA("c289c2421ce8e4c979dbe313b0d1a90efae762c740b4ce616db61f68601486e4"),
		mustHexToECDSA("3c5d4c43e45e0054ef74dec37d59075a11d2e6be156220b6ef3c574b077c09b2"),
		mustHexToECDSA("b9a94828e1f857eacb40740a6b681e622875bd587c1398905c7caa66e5fee98e"),
		mustHexToECDSA("0e3880035c2edb9a206d0e2b6c6685d520307e70d1a6b80ec2a3ea2da7c4277f"),
		mustHexToECDSA("d4e3e979706eedcd998097e253e6719f6b2d5bda22bd7c4d318dd5d7f73e0126"),
		mustHexToECDSA("c6c1c96fe5d844977dc9f6f78a0fcec8fc306a223017547e6fb95e51687131e1"),
		mustHexToECDSA("457fd88b89b6b8856f232059229b344af7c10f345ff500ef5b62b85fe8234152"),
		mustHexToECDSA("031e9b3fe46403156d2693ccad66e566a94beae64fc4ede027cbdc4025619ddd"),
		mustHexToECDSA("2fdcd4be0c74df4f20e6922fa10e375f3b6913d26470ed257e3d859fdb931546"),
		mustHexToECDSA("9959d4494b34c6f3b1fc43d704b8b9507a221ec96476e696606a0697d1fcaa57"),
		mustHexToECDSA("66b7a0023dd5d8ab3c076b7dea4acaccce067d5bf97b3ef47df35660b4955164"),
		mustHexToECDSA("9baf07bce331aac0270f686528714fd638b9fd1e342e5d5e4797fc8382702df5"),
		mustHexToECDSA("8332f65c7d55987a15ea5a79f302212a2aebaf3daab2fd6f39a3cd71889f67b7"),
		mustHexToECDSA("ad4ee35a4693dd9eea2de71af1ef24065e8c5eea2bc89f4125665323fb45deac"),
		mustHexToECDSA("649a89be7b2bd24c85f943a6ef68431b30d3ab891e90865150f708b3e03f24aa"),
		mustHexToECDSA("dcf27890d2a97b1fea1ec877fc56bf2b1fcb9b2b11fd2e7d8a82df9897a3ceeb"),
		mustHexToECDSA("8cbfc69bdf7104d3f0c79250f780d33914556dc94b7164f1949d1187abcbe2f6"),
		mustHexToECDSA("e851927b1441b0046d0d778da7fa5fe45403166cb2acfb06798f698075983daa"),
		mustHexToECDSA("9840b4099a0df73fbd3cb2b092a8cd87a8c295c93a9af69612e4444a9d249224"),
	}
)

func mustHexToECDSA(x string) *ecdsa.PrivateKey {
	key, err := crypto.HexToECDSA(x)
	if err != nil {
		panic(err)
	}
	return key
}

// NewKey returns a pre-generated test key.
func NewKey() *ecdsa.PrivateKey {
	keysMu.Lock()
	defer keysMu.Unlock()
	if keysIdx >= len(keys) {
		panic("not enough pre-generated keys for new key")
	}
	key := keys[keysIdx]
	keysIdx++
	return key
}
